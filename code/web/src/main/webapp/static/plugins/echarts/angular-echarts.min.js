!function () {
    "use strict";
    function e(e, t, o, l) {
        return function (r, a, i) {
            function n(e) {
                s = e.width || i.width || 320, y = e.height || i.height || 240, g.style.width = s + "px", g.style.height = y + "px"
            }

            function c(e, t, l) {
                t = angular.extend({showXAxis: !0, showYAxis: !0, showLegend: !0}, t);
                var r = {x: 0, y: 5, width: s - 5, height: y - 35}, a = angular.extend({
                    orient: "top",
                    axisLine: {show: !1}
                }, angular.isObject(t.xAxis) ? t.xAxis : {}), i = angular.extend({
                    type: "value",
                    orient: "right",
                    scale: !1,
                    axisLine: {show: !1},
                    axisLabel: {
                        formatter: function (e) {
                            return o.formatKMBT(e)
                        }
                    }
                }, angular.isObject(t.yAxis) ? t.yAxis : {}), n = {
                    title: o.getTitle(e, t, l),
                    tooltip: o.getTooltip(e, t, l),
                    legend: o.getLegend(e, t, l),
                    toolbox: angular.extend({show: !1}, angular.isObject(t.toolbox) ? t.toolbox : {}),
                    xAxis: [angular.extend(a, o.getAxisTicks(e, t, l))],
                    yAxis: [i],
                    series: o.getSeries(e, t, l)
                };
                return t.showXAxis || angular.forEach(n.xAxis, function (e) {
                    e.axisLine = {show: !1}, e.axisLabel = {show: !1}, e.axisTick = {show: !1}
                }), t.showYAxis || angular.forEach(n.yAxis, function (e) {
                    e.axisLine = {show: !1}, e.axisLabel = {show: !1}, e.axisTick = {show: !1}
                }), t.showLegend && "gauge" !== l || delete n.legend, o.isAxisChart(l) || (delete n.xAxis, delete n.yAxis), t.dataZoom && (n.dataZoom = angular.extend({
                    show: !0,
                    realtime: !0
                }, t.dataZoom)), n.grid = r, n
            }

            function d() {
                if (r.data && r.config) {
                    var o;
                    n(r.config), h || (h = echarts.init(g, t.get(r.config.theme || "macarons"))), angular.isString(r.data) ? (h.showLoading({text: r.config.loading || "奋力加载中..."}), e.get(r.data).success(function (e) {
                        if (h.hideLoading(), !e.data)throw new Error("angular-echarts: no data loaded from " + r.data);
                        o = c(e.data, r.config, l), r.config.debug && (console.log(o), console.log(e)), r.config.forceClear && h.clear(), o.series.length ? (h.setOption(o), h.resize()) : a.text("没有数据")
                    }).error(function () {
                        throw h.hideLoading(), new Error("angular-echarts: error loading data from " + r.data)
                    })) : (o = c(r.data, r.config, l), r.config.debug && console.log(o), r.config.forceClear && h.clear(), o.series.length ? (h.setOption(o), h.resize()) : a.text("没有数据"))
                }
            }

            r.config = r.config || {};
            var s, y, h, g = a.find("div")[0];
            r.$watch(function () {
                return r.config
            }, function (e) {
                e && d()
            }), r.$watch(function () {
                return r.data
            }, function (e) {
                e && d()
            })
        }
    }

    angular.module("angular-echarts", ["angular-echarts.theme", "angular-echarts.util"]).directive("lineChart", ["$http", "theme", "util", function (t, o, l) {
        return {
            restrict: "EA",
            template: "<div></div>",
            scope: {config: "=config", data: "=data"},
            link: e(t, o, l, "line")
        }
    }]).directive("barChart", ["$http", "theme", "util", function (t, o, l) {
        return {
            restrict: "EA",
            template: "<div></div>",
            scope: {config: "=config", data: "=data"},
            link: e(t, o, l, "bar")
        }
    }]).directive("areaChart", ["$http", "theme", "util", function (t, o, l) {
        return {
            restrict: "EA",
            template: "<div></div>",
            scope: {config: "=config", data: "=data"},
            link: e(t, o, l, "area")
        }
    }]).directive("pieChart", ["$http", "theme", "util", function (t, o, l) {
        return {
            restrict: "EA",
            template: "<div></div>",
            scope: {config: "=config", data: "=data"},
            link: e(t, o, l, "pie")
        }
    }]).directive("donutChart", ["$http", "theme", "util", function (t, o, l) {
        return {
            restrict: "EA",
            template: "<div></div>",
            scope: {config: "=config", data: "=data"},
            link: e(t, o, l, "donut")
        }
    }]).directive("gaugeChart", ["$http", "theme", "util", function (t, o, l) {
        return {
            restrict: "EA",
            template: "<div></div>",
            scope: {config: "=config", data: "=data"},
            link: e(t, o, l, "gauge")
        }
    }]), angular.module("angular-echarts.util", []).factory("util", function () {
        function e(e) {
            return ["pie", "donut"].indexOf(e) > -1
        }

        function t(e) {
            return ["line", "bar", "area"].indexOf(e) > -1
        }

        function o(e, t, o) {
            var l = [];
            return e[0] && angular.forEach(e[0].datapoints, function (e) {
                l.push(e.x)
            }), {type: "category", boundaryGap: "bar" === o, data: l}
        }

        function l(o, l, r) {
            var a = [];
            return angular.forEach(o, function (o) {
                var i = [];
                angular.forEach(o.datapoints, function (e) {
                    i.push(e.y)
                });
                var n = {type: r || "line", name: o.name, data: i};
                "area" === r && (n.type = "line", n.itemStyle = {normal: {areaStyle: {type: "default"}}}), "gauge" === r && (n = angular.extend(n, {
                    splitNumber: 10,
                    axisLine: {lineStyle: {color: [[.2, "#228b22"], [.8, "#48b"], [1, "#ff4500"]], width: 8}},
                    axisTick: {splitNumber: 10, length: 12, lineStyle: {color: "auto"}},
                    axisLabel: {textStyle: {color: "auto"}},
                    splitLine: {show: !0, length: 30, lineStyle: {color: "auto"}},
                    pointer: {width: 5},
                    title: {show: !0, offsetCenter: [0, "-40%"], textStyle: {fontWeight: "bolder"}},
                    detail: {formatter: "{value}%", textStyle: {color: "auto", fontWeight: "bolder"}}
                }, l.gauge || {})), t(r) || (n.data = [], angular.forEach(o.datapoints, function (e) {
                    n.data.push({value: e.y, name: e.x})
                })), e(r) && (n.type = "pie", n.center = l.center || ["40%", "50%"], n.radius = l.radius || "60%", "donut" === r ? (n.radius = l.radius || ["50%", "70%"], n = angular.extend(n, {
                    itemStyle: {
                        normal: {
                            label: {show: !1},
                            labelLine: {show: !1}
                        },
                        emphasis: {
                            label: {
                                show: !0,
                                position: "center",
                                textStyle: {fontSize: "50", fontWeight: "bold"}
                            }
                        }
                    }
                }, l.donut || {})) : "pie" === r && (n = angular.extend(n, {
                    itemStyle: {
                        normal: {
                            label: {
                                position: "inner",
                                formatter: function (e, t, o, l) {
                                    return (l - 0).toFixed(0) + "%"
                                }
                            }, labelLine: {show: !1}
                        }, emphasis: {label: {show: !0, formatter: "{b}\n{d}%"}}
                    }
                }, l.pie || {}))), l.stack && (n.stack = "total"), a.push(n)
            }), a
        }

        function r(t, o, l) {
            var r = {data: []};
            return e(l) ? (t[0] && angular.forEach(t[0].datapoints, function (e) {
                r.data.push(e.x)
            }), r.orient = "verticle", r.x = "right", r.y = "center") : (angular.forEach(t, function (e) {
                r.data.push(e.name)
            }), r.orient = "verticle", r.x = 52, r.y = o.subtitle ? 54 : 30), angular.extend(r, o.legend || {})
        }

        function a(e, t, o) {
            var l = {};
            switch (o) {
                case"line":
                case"area":
                    l.trigger = "axis";
                    break;
                case"pie":
                case"donut":
                case"bar":
                case"gauge":
                    l.trigger = "item"
            }
            return "pie" === o && (l.formatter = "{a} <br/>{b}: {c} ({d}%)"), angular.extend(l, angular.isObject(t.tooltip) ? t.tooltip : {})
        }

        function i(t, o, l) {
            return angular.isObject(o.title) ? o.title : e(l) ? null : {text: o.title, subtext: o.subtitle || "", x: 50}
        }

        function n(e, t) {
            return t || (t = function (e) {
                return Math.round(100 * e) / 100
            }), e = Math.abs(e), e >= 1e12 ? t(e / 1e12) + "T" : e >= 1e9 ? t(e / 1e9) + "B" : e >= 1e6 ? t(e / 1e6) + "M" : e >= 1e3 ? t(e / 1e3) + "K" : 1 > e && e > 0 ? t(e) : 0 === e ? "" : t(e)
        }

        return {
            isPieChart: e,
            isAxisChart: t,
            getAxisTicks: o,
            getSeries: l,
            getLegend: r,
            getTooltip: a,
            getTitle: i,
            formatKMBT: n
        }
    }), angular.module("angular-echarts.theme", []).factory("theme", ["infographic", "macarons", "shine", "dark", "blue", "green", "red", function (e, t, o, l, r, a, i, n) {
        var c = {infographic: e, macarons: t, shine: o, dark: l, blue: r, green: a, red: i, grey: n};
        return {
            get: function (e) {
                return c[e] ? c[e] : {}
            }
        }
    }]), angular.module("angular-echarts.theme").factory("blue", function () {
        return {
            color: ["#1790cf", "#1bb2d8", "#99d2dd", "#88b0bb", "#1c7099", "#038cc4", "#75abd0", "#afd6dd"],
            title: {itemGap: 8, textStyle: {fontWeight: "normal", color: "#1790cf"}},
            dataRange: {color: ["#1178ad", "#72bbd0"]},
            toolbox: {color: ["#1790cf", "#1790cf", "#1790cf", "#1790cf"]},
            tooltip: {
                backgroundColor: "rgba(0,0,0,0.5)",
                axisPointer: {
                    type: "line",
                    lineStyle: {color: "#1790cf", type: "dashed"},
                    crossStyle: {color: "#1790cf"},
                    shadowStyle: {color: "rgba(200,200,200,0.3)"}
                }
            },
            dataZoom: {dataBackgroundColor: "#eee", fillerColor: "rgba(144,197,237,0.2)", handleColor: "#1790cf"},
            grid: {borderWidth: 0},
            categoryAxis: {axisLine: {lineStyle: {color: "#1790cf"}}, splitLine: {lineStyle: {color: ["#eee"]}}},
            valueAxis: {
                axisLine: {lineStyle: {color: "#1790cf"}},
                splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.1)", "rgba(200,200,200,0.1)"]}},
                splitLine: {lineStyle: {color: ["#eee"]}}
            },
            timeline: {
                lineStyle: {color: "#1790cf"},
                controlStyle: {normal: {color: "#1790cf"}, emphasis: {color: "#1790cf"}}
            },
            k: {
                itemStyle: {
                    normal: {
                        color: "#1bb2d8",
                        color0: "#99d2dd",
                        lineStyle: {width: 1, color: "#1c7099", color0: "#88b0bb"}
                    }
                }
            },
            map: {
                itemStyle: {
                    normal: {areaStyle: {color: "#ddd"}, label: {textStyle: {color: "#c12e34"}}},
                    emphasis: {areaStyle: {color: "#99d2dd"}, label: {textStyle: {color: "#c12e34"}}}
                }
            },
            force: {itemStyle: {normal: {linkStyle: {strokeColor: "#1790cf"}}}},
            chord: {
                padding: 4,
                itemStyle: {
                    normal: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    },
                    emphasis: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    }
                }
            },
            gauge: {
                startAngle: 225,
                endAngle: -45,
                axisLine: {show: !0, lineStyle: {color: [[.2, "#1bb2d8"], [.8, "#1790cf"], [1, "#1c7099"]], width: 8}},
                axisTick: {splitNumber: 10, length: 12, lineStyle: {color: "auto"}},
                axisLabel: {textStyle: {color: "auto"}},
                splitLine: {length: 18, lineStyle: {color: "auto"}},
                pointer: {length: "90%", color: "auto"},
                title: {textStyle: {color: "#333"}},
                detail: {textStyle: {color: "auto"}}
            },
            textStyle: {fontFamily: "微软雅黑, Arial, Verdana, sans-serif"}
        }
    }), angular.module("angular-echarts.theme").factory("dark", function () {
        return {
            backgroundColor: "#1b1b1b",
            color: ["#FE8463", "#9BCA63", "#FAD860", "#60C0DD", "#0084C6", "#D7504B", "#C6E579", "#26C0C0", "#F0805A", "#F4E001", "#B5C334"],
            title: {itemGap: 8, textStyle: {fontWeight: "normal", color: "#fff"}},
            legend: {itemGap: 8, textStyle: {color: "#ccc"}},
            dataRange: {itemWidth: 15, color: ["#FFF808", "#21BCF9"], textStyle: {color: "#ccc"}},
            toolbox: {
                color: ["#fff", "#fff", "#fff", "#fff"],
                effectiveColor: "#FE8463",
                disableColor: "#666",
                itemGap: 8
            },
            tooltip: {
                backgroundColor: "rgba(250,250,250,0.8)",
                axisPointer: {
                    type: "line",
                    lineStyle: {color: "#aaa"},
                    crossStyle: {color: "#aaa"},
                    shadowStyle: {color: "rgba(200,200,200,0.2)"}
                },
                textStyle: {color: "#333"}
            },
            dataZoom: {dataBackgroundColor: "#555", fillerColor: "rgba(200,200,200,0.2)", handleColor: "#eee"},
            grid: {borderWidth: 0},
            categoryAxis: {
                axisLine: {show: !1},
                axisTick: {show: !1},
                axisLabel: {textStyle: {color: "#ccc"}},
                splitLine: {show: !1}
            },
            valueAxis: {
                axisLine: {show: !1},
                axisTick: {show: !1},
                axisLabel: {textStyle: {color: "#ccc"}},
                splitLine: {lineStyle: {color: ["#aaa"], type: "dashed"}},
                splitArea: {show: !1}
            },
            polar: {
                name: {textStyle: {color: "#ccc"}},
                axisLine: {lineStyle: {color: "#ddd"}},
                splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.2)", "rgba(200,200,200,0.2)"]}},
                splitLine: {lineStyle: {color: "#ddd"}}
            },
            timeline: {
                label: {textStyle: {color: "#ccc"}},
                lineStyle: {color: "#aaa"},
                controlStyle: {normal: {color: "#fff"}, emphasis: {color: "#FE8463"}},
                symbolSize: 3
            },
            line: {smooth: !0},
            k: {
                itemStyle: {
                    normal: {
                        color: "#FE8463",
                        color0: "#9BCA63",
                        lineStyle: {width: 1, color: "#FE8463", color0: "#9BCA63"}
                    }
                }
            },
            radar: {symbol: "emptyCircle", symbolSize: 3},
            pie: {
                itemStyle: {
                    normal: {borderWidth: 1, borderColor: "rgba(255, 255, 255, 0.5)"},
                    emphasis: {borderWidth: 1, borderColor: "rgba(255, 255, 255, 1)"}
                }
            },
            map: {
                itemStyle: {
                    normal: {
                        borderColor: "rgba(255, 255, 255, 0.5)",
                        areaStyle: {color: "#ddd"},
                        label: {textStyle: {color: "#ccc"}}
                    }, emphasis: {areaStyle: {color: "#FE8463"}, label: {textStyle: {color: "ccc"}}}
                }
            },
            force: {itemStyle: {normal: {linkStyle: {strokeColor: "#fff"}}}},
            chord: {
                padding: 4,
                itemStyle: {
                    normal: {
                        lineStyle: {width: 1, color: "rgba(228, 228, 228, 0.2)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(228, 228, 228, 0.2)"}}
                    },
                    emphasis: {
                        lineStyle: {width: 1, color: "rgba(228, 228, 228, 0.9)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(228, 228, 228, 0.9)"}}
                    }
                }
            },
            gauge: {
                startAngle: 225,
                endAngle: -45,
                axisLine: {
                    show: !0,
                    lineStyle: {
                        color: [[.2, "#9BCA63"], [.8, "#60C0DD"], [1, "#D7504B"]],
                        width: 3,
                        shadowColor: "#fff",
                        shadowBlur: 10
                    }
                },
                axisTick: {length: 15, lineStyle: {color: "auto", shadowColor: "#fff", shadowBlur: 10}},
                axisLabel: {textStyle: {fontWeight: "bolder", color: "#fff", shadowColor: "#fff", shadowBlur: 10}},
                splitLine: {length: 25, lineStyle: {width: 3, color: "#fff", shadowColor: "#fff", shadowBlur: 10}},
                pointer: {shadowColor: "#fff", shadowBlur: 5},
                title: {
                    textStyle: {
                        fontWeight: "bolder",
                        fontSize: 20,
                        fontStyle: "italic",
                        color: "#fff",
                        shadowColor: "#fff",
                        shadowBlur: 10
                    }
                },
                detail: {
                    shadowColor: "#fff",
                    shadowBlur: 5,
                    offsetCenter: [0, "50%"],
                    textStyle: {fontWeight: "bolder", color: "#fff"}
                }
            },
            funnel: {
                itemStyle: {
                    normal: {borderColor: "rgba(255, 255, 255, 0.5)", borderWidth: 1},
                    emphasis: {borderColor: "rgba(255, 255, 255, 1)", borderWidth: 1}
                }
            },
            textStyle: {fontFamily: "微软雅黑, Arial, Verdana, sans-serif"}
        }
    }), angular.module("angular-echarts.theme").factory("green", function () {
        return {
            color: ["#408829", "#68a54a", "#a9cba2", "#86b379", "#397b29", "#8abb6f", "#759c6a", "#bfd3b7"],
            title: {itemGap: 8, textStyle: {fontWeight: "normal", color: "#408829"}},
            dataRange: {color: ["#1f610a", "#97b58d"]},
            toolbox: {color: ["#408829", "#408829", "#408829", "#408829"]},
            tooltip: {
                backgroundColor: "rgba(0,0,0,0.5)",
                axisPointer: {
                    type: "line",
                    lineStyle: {color: "#408829", type: "dashed"},
                    crossStyle: {color: "#408829"},
                    shadowStyle: {color: "rgba(200,200,200,0.3)"}
                }
            },
            dataZoom: {dataBackgroundColor: "#eee", fillerColor: "rgba(64,136,41,0.2)", handleColor: "#408829"},
            grid: {borderWidth: 0},
            categoryAxis: {axisLine: {lineStyle: {color: "#408829"}}, splitLine: {lineStyle: {color: ["#eee"]}}},
            valueAxis: {
                axisLine: {lineStyle: {color: "#408829"}},
                splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.1)", "rgba(200,200,200,0.1)"]}},
                splitLine: {lineStyle: {color: ["#eee"]}}
            },
            timeline: {
                lineStyle: {color: "#408829"},
                controlStyle: {normal: {color: "#408829"}, emphasis: {color: "#408829"}}
            },
            k: {
                itemStyle: {
                    normal: {
                        color: "#68a54a",
                        color0: "#a9cba2",
                        lineStyle: {width: 1, color: "#408829", color0: "#86b379"}
                    }
                }
            },
            map: {
                itemStyle: {
                    normal: {areaStyle: {color: "#ddd"}, label: {textStyle: {color: "#c12e34"}}},
                    emphasis: {areaStyle: {color: "#99d2dd"}, label: {textStyle: {color: "#c12e34"}}}
                }
            },
            force: {itemStyle: {normal: {linkStyle: {strokeColor: "#408829"}}}},
            chord: {
                padding: 4,
                itemStyle: {
                    normal: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    },
                    emphasis: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    }
                }
            },
            gauge: {
                startAngle: 225,
                endAngle: -45,
                axisLine: {show: !0, lineStyle: {color: [[.2, "#86b379"], [.8, "#68a54a"], [1, "#408829"]], width: 8}},
                axisTick: {splitNumber: 10, length: 12, lineStyle: {color: "auto"}},
                axisLabel: {textStyle: {color: "auto"}},
                splitLine: {length: 18, lineStyle: {color: "auto"}},
                pointer: {length: "90%", color: "auto"},
                title: {textStyle: {color: "#333"}},
                detail: {textStyle: {color: "auto"}}
            },
            textStyle: {fontFamily: "微软雅黑, Arial, Verdana, sans-serif"}
        }
    }), angular.module("angular-echarts.theme").factory("infographic", function () {
        return {
            color: ["#C1232B", "#B5C334", "#FCCE10", "#E87C25", "#27727B", "#FE8463", "#9BCA63", "#FAD860", "#F3A43B", "#60C0DD", "#D7504B", "#C6E579", "#F4E001", "#F0805A", "#26C0C0"],
            title: {itemGap: 8, textStyle: {fontWeight: "normal", color: "#27727B"}},
            legend: {itemGap: 8},
            dataRange: {x: "right", y: "center", itemWidth: 5, itemHeight: 25, color: ["#C1232B", "#FCCE10"]},
            toolbox: {
                color: ["#C1232B", "#B5C334", "#FCCE10", "#E87C25", "#27727B", "#FE8463", "#9BCA63", "#FAD860", "#F3A43B", "#60C0DD"],
                effectiveColor: "#ff4500",
                itemGap: 8
            },
            tooltip: {
                backgroundColor: "rgba(50,50,50,0.5)",
                axisPointer: {
                    type: "line",
                    lineStyle: {color: "#27727B", type: "dashed"},
                    crossStyle: {color: "#27727B"},
                    shadowStyle: {color: "rgba(200,200,200,0.3)"}
                }
            },
            dataZoom: {
                dataBackgroundColor: "rgba(181,195,52,0.3)",
                fillerColor: "rgba(181,195,52,0.2)",
                handleColor: "#27727B"
            },
            grid: {borderWidth: 0},
            categoryAxis: {axisLine: {lineStyle: {color: "#27727B"}}, splitLine: {show: !1}},
            valueAxis: {
                axisLine: {show: !1},
                splitArea: {show: !1},
                splitLine: {lineStyle: {color: ["#ccc"], type: "dashed"}}
            },
            polar: {
                axisLine: {lineStyle: {color: "#ddd"}},
                splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.2)", "rgba(200,200,200,0.2)"]}},
                splitLine: {lineStyle: {color: "#ddd"}}
            },
            timeline: {
                lineStyle: {color: "#27727B"},
                controlStyle: {normal: {color: "#27727B"}, emphasis: {color: "#27727B"}},
                symbol: "emptyCircle",
                symbolSize: 3
            },
            bar: {itemStyle: {normal: {borderRadius: 0}, emphasis: {borderRadius: 0}}},
            line: {
                itemStyle: {
                    normal: {borderWidth: 2, borderColor: "#fff", lineStyle: {width: 3}},
                    emphasis: {borderWidth: 0}
                }, symbol: "circle", symbolSize: 3.5
            },
            k: {
                itemStyle: {
                    normal: {
                        color: "#C1232B",
                        color0: "#B5C334",
                        lineStyle: {width: 1, color: "#C1232B", color0: "#B5C334"}
                    }
                }
            },
            scatter: {
                itemdStyle: {
                    normal: {borderWidth: 1, borderColor: "rgba(200,200,200,0.5)"},
                    emphasis: {borderWidth: 0}
                }, symbol: "star4", symbolSize: 4
            },
            radar: {symbol: "emptyCircle", symbolSize: 3},
            map: {
                itemStyle: {
                    normal: {areaStyle: {color: "#ddd"}, label: {textStyle: {color: "#C1232B"}}},
                    emphasis: {areaStyle: {color: "#fe994e"}, label: {textStyle: {color: "rgb(100,0,0)"}}}
                }
            },
            force: {itemStyle: {normal: {linkStyle: {strokeColor: "#27727B"}}}},
            chord: {
                padding: 4,
                itemStyle: {
                    normal: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    },
                    emphasis: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    }
                }
            },
            gauge: {
                center: ["50%", "80%"],
                radius: "100%",
                startAngle: 180,
                endAngle: 0,
                axisLine: {
                    show: !0,
                    lineStyle: {color: [[.2, "#B5C334"], [.8, "#27727B"], [1, "#C1232B"]], width: "40%"}
                },
                axisTick: {splitNumber: 2, length: 5, lineStyle: {color: "#fff"}},
                axisLabel: {textStyle: {color: "#fff", fontWeight: "bolder"}},
                splitLine: {length: "5%", lineStyle: {color: "#fff"}},
                pointer: {width: "40%", length: "80%", color: "#fff"},
                title: {offsetCenter: [0, -20], textStyle: {color: "auto", fontSize: 20}},
                detail: {offsetCenter: [0, 0], textStyle: {color: "auto", fontSize: 40}}
            },
            textStyle: {fontFamily: "微软雅黑, Arial, Verdana, sans-serif"}
        }
    }), angular.module("angular-echarts.theme").factory("macarons", function () {
        return {
            color: ["#2ec7c9", "#b6a2de", "#5ab1ef", "#ffb980", "#d87a80", "#8d98b3", "#e5cf0d", "#97b552", "#95706d", "#dc69aa", "#07a2a4", "#9a7fd1", "#588dd5", "#f5994e", "#c05050", "#59678c", "#c9ab00", "#7eb00a", "#6f5553", "#c14089"],
            title: {itemGap: 8, textStyle: {fontWeight: "normal", color: "#008acd"}},
            legend: {itemGap: 8},
            dataRange: {itemWidth: 15, color: ["#2ec7c9", "#b6a2de"]},
            toolbox: {color: ["#1e90ff", "#1e90ff", "#1e90ff", "#1e90ff"], effectiveColor: "#ff4500", itemGap: 8},
            tooltip: {
                backgroundColor: "rgba(50,50,50,0.5)",
                axisPointer: {
                    type: "line",
                    lineStyle: {color: "#008acd", type: "dashed", width: 1},
                    crossStyle: {color: "#008acd", width: 1},
                    shadowStyle: {color: "rgba(200,200,200,0.2)"}
                }
            },
            dataZoom: {dataBackgroundColor: "#efefff", fillerColor: "rgba(182,162,222,0.2)", handleColor: "#008acd"},
            grid: {borderColor: "#eee"},
            categoryAxis: {
                axisLine: {lineStyle: {color: "#008acd", width: 1}},
                axisLabel: {skipFirst: !0, margin: 3, textStyle: {color: "#999999"}},
                axisTick: {show: !1, lineStyle: {color: "#008acd", width: 1}},
                splitLine: {lineStyle: {color: ["#eee"]}}
            },
            valueAxis: {
                axisLine: {lineStyle: {color: "#008acd", width: 1}},
                axisLabel: {skipFirst: !0, margin: 3, textStyle: {color: "#999999"}},
                axisTick: {show: !1, lineStyle: {color: "#008acd", width: 1}},
                splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.1)", "rgba(200,200,200,0.1)"]}},
                splitLine: {lineStyle: {color: ["#eee"]}}
            },
            polar: {
                axisLine: {lineStyle: {color: "#ddd"}},
                splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.2)", "rgba(200,200,200,0.2)"]}},
                splitLine: {lineStyle: {color: "#ddd"}}
            },
            timeline: {
                lineStyle: {color: "#008acd"},
                controlStyle: {normal: {color: "#008acd"}, emphasis: {color: "#008acd"}},
                symbol: "emptyCircle",
                symbolSize: 3
            },
            bar: {itemStyle: {normal: {borderRadius: 5}, emphasis: {borderRadius: 5}}},
            line: {smooth: !1, symbol: "circle", symbolSize: 3},
            k: {
                itemStyle: {
                    normal: {
                        color: "#d87a80",
                        color0: "#2ec7c9",
                        lineStyle: {width: 1, color: "#d87a80", color0: "#2ec7c9"}
                    }
                }
            },
            scatter: {symbol: "circle", symbolSize: 4},
            radar: {symbol: "emptyCircle", symbolSize: 3},
            map: {
                itemStyle: {
                    normal: {areaStyle: {color: "#ddd"}, label: {textStyle: {color: "#d87a80"}}},
                    emphasis: {areaStyle: {color: "#fe994e"}, label: {textStyle: {color: "rgb(100,0,0)"}}}
                }
            },
            force: {itemStyle: {normal: {linkStyle: {strokeColor: "#1e90ff"}}}},
            chord: {
                padding: 4,
                itemStyle: {
                    normal: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    },
                    emphasis: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    }
                }
            },
            gauge: {
                startAngle: 225,
                endAngle: -45,
                axisLine: {show: !0, lineStyle: {color: [[.2, "#2ec7c9"], [.8, "#5ab1ef"], [1, "#d87a80"]], width: 10}},
                axisTick: {splitNumber: 10, length: 15, lineStyle: {color: "auto"}},
                axisLabel: {textStyle: {color: "auto"}},
                splitLine: {length: 22, lineStyle: {color: "auto"}},
                pointer: {width: 5, color: "auto"},
                title: {textStyle: {color: "#333"}},
                detail: {textStyle: {color: "auto"}}
            },
            textStyle: {fontFamily: "微软雅黑, Arial, Verdana, sans-serif"}
        }
    }), angular.module("angular-echarts.theme").factory("red", function () {
        return {
            color: ["#d8361b", "#f16b4c", "#f7b4a9", "#d26666", "#99311c", "#c42703", "#d07e75"],
            title: {itemGap: 8, textStyle: {fontWeight: "normal", color: "#d8361b"}},
            dataRange: {color: ["#bd0707", "#ffd2d2"]},
            toolbox: {color: ["#d8361b", "#d8361b", "#d8361b", "#d8361b"]},
            tooltip: {
                backgroundColor: "rgba(0,0,0,0.5)",
                axisPointer: {
                    type: "line",
                    lineStyle: {color: "#d8361b", type: "dashed"},
                    crossStyle: {color: "#d8361b"},
                    shadowStyle: {color: "rgba(200,200,200,0.3)"}
                }
            },
            dataZoom: {dataBackgroundColor: "#eee", fillerColor: "rgba(216,54,27,0.2)", handleColor: "#d8361b"},
            grid: {borderWidth: 0},
            categoryAxis: {axisLine: {lineStyle: {color: "#d8361b"}}, splitLine: {lineStyle: {color: ["#eee"]}}},
            valueAxis: {
                axisLine: {lineStyle: {color: "#d8361b"}},
                splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.1)", "rgba(200,200,200,0.1)"]}},
                splitLine: {lineStyle: {color: ["#eee"]}}
            },
            timeline: {
                lineStyle: {color: "#d8361b"},
                controlStyle: {normal: {color: "#d8361b"}, emphasis: {color: "#d8361b"}}
            },
            k: {
                itemStyle: {
                    normal: {
                        color: "#f16b4c",
                        color0: "#f7b4a9",
                        lineStyle: {width: 1, color: "#d8361b", color0: "#d26666"}
                    }
                }
            },
            map: {
                itemStyle: {
                    normal: {areaStyle: {color: "#ddd"}, label: {textStyle: {color: "#c12e34"}}},
                    emphasis: {areaStyle: {color: "#99d2dd"}, label: {textStyle: {color: "#c12e34"}}}
                }
            },
            force: {itemStyle: {normal: {linkStyle: {strokeColor: "#d8361b"}}}},
            chord: {
                padding: 4,
                itemStyle: {
                    normal: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    },
                    emphasis: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    }
                }
            },
            gauge: {
                startAngle: 225,
                endAngle: -45,
                axisLine: {show: !0, lineStyle: {color: [[.2, "#f16b4c"], [.8, "#d8361b"], [1, "#99311c"]], width: 8}},
                axisTick: {splitNumber: 10, length: 12, lineStyle: {color: "auto"}},
                axisLabel: {textStyle: {color: "auto"}},
                splitLine: {length: 18, lineStyle: {color: "auto"}},
                pointer: {length: "90%", color: "auto"},
                title: {textStyle: {color: "#333"}},
                detail: {textStyle: {color: "auto"}}
            },
            textStyle: {fontFamily: "微软雅黑, Arial, Verdana, sans-serif"}
        }
    }), angular.module("angular-echarts.theme").factory("shine", function () {
        return {
            color: ["#c12e34", "#e6b600", "#0098d9", "#2b821d", "#005eaa", "#339ca8", "#cda819", "#32a487"],
            title: {itemGap: 8, textStyle: {fontWeight: "normal"}},
            legend: {itemGap: 8},
            dataRange: {itemWidth: 15, color: ["#1790cf", "#a2d4e6"]},
            toolbox: {color: ["#06467c", "#00613c", "#872d2f", "#c47630"], itemGap: 8},
            tooltip: {backgroundColor: "rgba(0,0,0,0.6)"},
            dataZoom: {dataBackgroundColor: "#dedede", fillerColor: "rgba(154,217,247,0.2)", handleColor: "#005eaa"},
            grid: {borderWidth: 0},
            categoryAxis: {axisLine: {show: !1}, axisTick: {show: !1}},
            valueAxis: {
                axisLine: {show: !1},
                axisTick: {show: !1},
                splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.2)", "rgba(200,200,200,0.2)"]}}
            },
            timeline: {
                lineStyle: {color: "#005eaa"},
                controlStyle: {normal: {color: "#005eaa"}, emphasis: {color: "#005eaa"}}
            },
            k: {
                itemStyle: {
                    normal: {
                        color: "#c12e34",
                        color0: "#2b821d",
                        lineStyle: {width: 1, color: "#c12e34", color0: "#2b821d"}
                    }
                }
            },
            map: {
                itemStyle: {
                    normal: {areaStyle: {color: "#ddd"}, label: {textStyle: {color: "#c12e34"}}},
                    emphasis: {areaStyle: {color: "#e6b600"}, label: {textStyle: {color: "#c12e34"}}}
                }
            },
            force: {itemStyle: {normal: {linkStyle: {strokeColor: "#005eaa"}}}},
            chord: {
                padding: 4,
                itemStyle: {
                    normal: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    },
                    emphasis: {
                        lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"},
                        chordStyle: {lineStyle: {width: 1, color: "rgba(128, 128, 128, 0.5)"}}
                    }
                }
            },
            gauge: {
                startAngle: 225,
                endAngle: -45,
                axisLine: {show: !0, lineStyle: {color: [[.2, "#2b821d"], [.8, "#005eaa"], [1, "#c12e34"]], width: 5}},
                axisTick: {splitNumber: 10, length: 8, lineStyle: {color: "auto"}},
                axisLabel: {textStyle: {color: "auto"}},
                splitLine: {length: 12, lineStyle: {color: "auto"}},
                pointer: {length: "90%", width: 3, color: "auto"},
                title: {textStyle: {color: "#333"}},
                detail: {textStyle: {color: "auto"}}
            },
            textStyle: {fontFamily: "微软雅黑, Arial, Verdana, sans-serif"}
        }
    })
}();