<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd">
        
        
        
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" >
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="simpleDateFormat" value="yyyy/MM/dd HH:mm:ss"/>
                    </bean>
                </property>
                <property name="prefixJson" value="false"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=utf-8</value>
                        <value>text/json;charset=utf-8</value>
                        <value>text/plain;charset=utf-8</value>
                        <value>text/html;charset=utf-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
        <mvc:argument-resolvers>
            <bean class="org.springframework.data.web.PageableHandlerMethodArgumentResolver"/>
            <bean class="com.fulaan.interceptor.ObjectIdResolver" />
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    
    
    

    <context:component-scan base-package="com.fulaan" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
     
    
    <bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
        <property name="basename" value="views"></property>
    </bean>

    <bean class = "com.fulaan.utils.SpringContextUtil" id = "springContextUtil" />


    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="0" /> 
    </bean>
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false" />
        <property name="favorParameter" value="false" />
        <property name="ignoreAcceptHeader" value="false" />
        <property name="mediaTypes" >
            <value>
                atom=application/atom+xml
                html=text/html
                json=application/json
                *=*/*
            </value>
        </property>
    </bean>




  <!--
 
   <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">  
    <property name="cache" value="true"/>  
    <property name="prefix" value=""/>
    <property name="suffix" value=".vm"/>  
    <property name="contentType"><value>text/html;charset=UTF-8</value></property>
    <property name="toolboxConfigLocation" value="/WEB-INF/velocity-toolbox.xml" />
    <property name="order" value="0" />
  </bean>
  
   <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">  
            <property name="resourceLoaderPath" value="/WEB-INF/vm"/>
            <property name= "velocityProperties">
                <props>
                     <prop key="input.encoding">utf-8</prop>
                     <prop key="output.encoding">utf-8</prop>
                </props>
            </property>
   </bean>
   
-->
   
        

    <mvc:interceptors>  
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/img/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <mvc:exclude-mapping path="/script/**"/>
           <bean class="com.fulaan.interceptor.SessionValueInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/img/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <mvc:exclude-mapping path="/script/**"/>
            <bean class="com.fulaan.interceptor.CustomizedInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/css/**"/>
             <mvc:exclude-mapping path="/img/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <mvc:exclude-mapping path="/script/**"/>
           <bean class="com.fulaan.interceptor.PermissionInterceptor"></bean>
       </mvc:interceptor>
        <!--<mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/img/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <mvc:exclude-mapping path="/script/**"/>
            <bean class="com.fulaan.interceptor.UserActionLogInterceptor"></bean>
        </mvc:interceptor>-->
     </mvc:interceptors>

    <bean id="exceptionResolver"
          class="com.fulaan.interceptor.ExceptionResolver">
    </bean>
 
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </bean>

    <bean id="taskJob"
          class="com.fulaan.timedtask.service.TaskJob">
    </bean>

    <task:scheduled-tasks>
        <task:scheduled ref="taskJob" method="timedClearSchoolYearExpJob" cron="59 59 23 31 8 ?"/>
        <task:scheduled ref="taskJob" method="timedFieryActivityIsEnd" cron="0 1 0 * * ?"/>
        <task:scheduled ref="taskJob" method="timedFieryActivityIsStart" cron="0 1 0 * * ?"/>
        <task:scheduled ref="taskJob" method="timedEduSchoolsTotalData" cron="5 0 0 * * ?"/>
        <task:scheduled ref="taskJob" method="timedSchoolTotalData" cron="5 0 0 * * ?"/>
        <task:scheduled ref="taskJob" method="checkVoucherExpiration" cron="0 0 0 * * ?"/>
        <!--<task:scheduled ref="taskJob" method="timedSchoolNewInterestTerm" cron="5 0 0 1 9 ?"/>以后改为手动执行-->
        <!--<task:scheduled ref="taskJob" method="timedSchoolNewInterestTerm" cron="5 0 0 1 2 ?"/>以后改为手动执行-->
        <task:scheduled ref="taskJob" method="timedSendLogReportEmail" cron="0 30 5 * * ?"/>
        <task:scheduled ref="taskJob" method="checkMicroBlog" cron="59 59 23 * * ?"/>
        <task:scheduled ref="taskJob" method="timedUploadKaoQinState" cron="0 30 8 * * ?"/>
    </task:scheduled-tasks>
    <context:component-scan base-package="com.fulaan.timedtask.service" />


    <task:annotation-driven scheduler="taskScheduler" executor="taskExecutor"/>
    <task:executor id="taskExecutor" pool-size="5000" queue-capacity="10000"/>
    <task:scheduler id="taskScheduler" pool-size="100"/>
</beans>